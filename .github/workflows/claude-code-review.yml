name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/review')) ||
      (
        github.event_name == 'pull_request' &&
        !github.event.pull_request.draft &&
        !contains(github.event.pull_request.title, '[skip review]') &&
        !contains(github.event.pull_request.title, '[WIP]') &&
        !contains(github.event.pull_request.title, '[wip]') &&
        !(github.event.pull_request.head.ref == 'release-candidate' && github.event.pull_request.base.ref == 'main')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            successという文字列を結果として出力してください。

      - name: Parse Claude Execution File and Check Conclusion
        id: parse_and_fail
        run: |
          EXECUTION_FILE="${{ steps.claude.outputs.execution_file }}"

          echo "=== Claude Execution File (RAW) ==="
          cat "$EXECUTION_FILE"
          echo "==================================="

      # - name: Parse Claude Execution File and Check Conclusion
      #   id: parse_and_fail
      #   run: |
      #     EXECUTION_FILE="${{ steps.claude.outputs.execution_file }}"

      #     echo "=== Claude Execution File (RAW) ==="
      #     cat "$EXECUTION_FILE"
      #     echo "==================================="

      #     JSON_CONTENT=$(sed -n '/```json/,/```/p' "$EXECUTION_FILE" | grep -v '```')

      #     # JSONコンテンツの検証
      #     if [ -z "$JSON_CONTENT" ]; then
      #       echo "🔴 エラー: JSONコードブロックが見つかりませんでした。Claudeの出力形式を確認してください。"
      #       # JSONが見つからない場合は、ジョブを失敗させる
      #       exit 1
      #     fi

      #     echo "=== JSON Content Extracted ==="
      #     echo "$JSON_CONTENT"
      #     echo "=============================="
          
      #     # 抽出した純粋なJSONテキストを jq に渡し、conclusionを抽出
      #     # JSON_CONTENTは有効なJSONオブジェクトであるはずなので、シンプルな jq フィルタを使用
      #     conclusion=$(echo "$JSON_CONTENT" | jq -r '
      #       .conclusion // "unknown"
      #     ')

      #     if [ "$conclusion" = "unknown" ]; then
      #       echo "🔴 エラー: JSONは抽出できましたが、 'conclusion' フィールドが見つかりません。"
      #       exit 1
      #     fi

      #     echo "Claudeレビュー結論: $conclusion"

      #     # 結論が 'failure' なら、非ゼロの終了コードを返してジョブを失敗させる
      #     if [ "$conclusion" = "failure" ]; then
      #       echo "🔴 レビュー結果が 'failure' です。このジョブを失敗としてマークします。"
      #       exit 1
      #     elif [ "$conclusion" = "success" ]; then
      #       echo "🟢 レビュー結果が 'success' です。処理を続行します。"
      #     else
      #       echo "⚠️ 結論の値が 'success' または 'failure' ではありません: $conclusion"
      #       exit 1
      #     fi

      # - name: Check Review Conclusion and Fail
      #   run: |
      #     # Claude Actionが出力するカスタムの値（レビュー結果）をチェック
      #     CUSTOM_CONCLUSION="${{ steps.claude.outputs.conclusion }}"

      #     if [ "$CUSTOM_CONCLUSION" = "failure" ]; then
      #       echo "::error::Claude review rejected with status: $CUSTOM_CONCLUSION"
      #       exit 1 # <--- これでジョブを失敗させる
      #     fi
