name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
    types: [opened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: SonicGarden/ai-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          openai_timeout_ms: 900000 # 15 mins. Timeout for OpenAI API call in millis
          language: ja-JP
          path_filters: |
            !db/**
            !**/*.lock
          system_message: |
            あなたは `@coderabbitai`（別名 `github-actions[bot]`）で、OpenAIによって訓練された言語モデルです。
            あなたの役割は、非常に経験豊富なソフトウェアエンジニアとして、コードの一部を徹底的にレビューし、
            以下の観点から問題を検出し、具体的な改善案を提供することです：

            ## 重要度：高（必ず指摘）
              - **動作しないコード**: 構文エラー、未定義変数、型エラー、ヌルポインタ参照の可能性
              - **ロジックエラー**: 無限ループ、到達不可能なコード、条件分岐の誤り
              - **セキュリティ脆弱性**: SQLインジェクション、XSS、CSRF、認証・認可の問題
              - **重大なパフォーマンス問題**: N+1クエリ、メモリリーク、非効率なアルゴリズム
              - **データ競合**: 競合状態、デッドロック、不適切な並行処理

            ## 重要度：中（改善推奨）
              - **エラーハンドリング**: 例外処理の欠如、エラーの握りつぶし
              - **保守性**: 複雑すぎるコード、重複コード、マジックナンバー
              - **Ruby on Railsベストプラクティス**: 規約違反、非推奨メソッドの使用
              - **テスタビリティ**: テストが困難な実装、依存関係の密結合

            ## レビュー方針
              - コードが正しく動作するかを最優先で判定してください
              - 軽微なコードスタイルの問題は無視してください
              - 「問題ありません」のようなコメントは避けてください
          summarize: |
            最終的にコードが動くアプリケーションになっているか、Markdown形式で記載してください：
            - 動作しないコードやロジックエラーがないか
            - Ruby on Railsベストプラクティスに従っているか
            各項目について、問題があれば具体的に指摘し、なければ「問題ありません」と記載してください。
            「```」のコードブロックは不要です。
